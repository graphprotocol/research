# specVersion indicates the version of the data source definition spec
specVersion: 0.0.1
# Links to the GraphQL schema being mapped to
schema:
  # Path to the local schema for this Data Source.
  path: ./schema.graphql
# A single Data Source may comprise multiple Datasets.
# Datasets are composed of Data, Structure & Mapping, which are intentionally
# decoupled.
datasets:
  # How the dataset is ingested into The Graph
  - kind: ethereum/contract
    data:
      name: MemeRegistry
      address: 0x06012c8cf97BEaD5deAe237070F9587f8E7A266d
      structure:
        abi:
          # Path to the smart contract ABI
          path: ./abis/MemeRegistry.json
    mapping:
      # Indicates that the mapping will be an event-driven.
      kind: ethereum/events
      # Version of the ETL mapping API used.
      apiVersion: 0.0.1
      # Indicates the language used by the mapping script runtime.
      # The type of WASM matters because we are implementing custom
      # data types for assemblyscript.
      language: wasm/assemblyscript
      # The entities that will be created/updated/removed in this mapping
      # Names must correspond to types in the GraphQL schema.
      entities:
        - Meme
        - User
        - Vote
        - Tag
        - MemeToken
      # Will be injected to into mapping module
      ethContractAbis:
        - name: MemeContract
          value:
            path: ./abis/Meme.json
      eventHandlers:
          # This event will be subscribed to and trigger the handler function
          # each time it is emitted.
        - event: RegistryEntryEvent(address,bytes32,uint256,uint256,uint256[])
          # This is the name of the handler function that will be exported
          # by the WASM module.
          handler: handleRegistryEntryEvent
      source:
        # Points to the AssemblyScript file, a module which should implement the mapping.
        # This should actually point to the built WASM output when deployed.
        path: ./mapping.ts
  - kind: ethereum/contract
    data:
      name: MemeAuctionFactory
      address: 0x06012c8cf97BEaD5deAe237070F9587f8E7A266d
      structure:
        abi:
          path: ./abis/MemeAuctionFactory.json
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      entities:
        - Meme
        - User
        - Vote
        - Tag
        - MemeToken
      ethContractAbis:
        - name: MemeAuction
          value:
            path: ./abis/MemeAuction.json
      eventHandlers:
        - event: MemeAuctionEvent(address,bytes32,uint256,uint256,uint256[])
          handler: handleMemeAuctionEvent
      source:
        path: ./mapping.ts
